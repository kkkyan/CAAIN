<configuration scan="false">

    <property resource="env.properties"/>

    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <!--<pattern>%-5level %d{yyyy-MM-dd HH:mm:ss} [%thread] %caller{1} : %msg %n</pattern>-->
            <pattern>%-5level %d{yyyy-MM-dd HH:mm:ss.SSS} %replace(%caller{1}){'(\bCaller.+?(?=\())|\r|\n|\s*|\t', ''} -
                %msg%n
            </pattern>
        </encoder>
    </appender>

    <appender name="FILE" class="ch.qos.logback.core.FileAppender">
        <file>${logback.filepath}</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <!--<pattern>%-5level %d{yyyy-MM-dd HH:mm:ss} [%thread] %caller{1} : %msg %n</pattern>-->
            <pattern>%-5level %d{yyyy-MM-dd HH:mm:ss.SSS} %replace(%caller{1}){'(\bCaller.+?(?=\())|\r|\n|\s*|\t', ''} -
                %msg%n
            </pattern>
        </encoder>
    </appender>

    <!-- 异步输出 -->
    <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <!--<queueSize>${logback.queueSize}</queueSize>-->
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="FILE"/>
    </appender>

    <!-- 日志输出级别 -->
    <root level="WARN">
        <appender-ref ref="STDOUT"/>
    </root>
</configuration>